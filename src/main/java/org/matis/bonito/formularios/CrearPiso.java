/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package org.matis.bonito.formularios;

import static java.awt.Color.CYAN;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import static java.awt.Toolkit.getDefaultToolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

import static java.lang.Integer.valueOf;
import static java.lang.String.format;
import static java.lang.System.out;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;
import org.matis.bonito.controller.PisoController;
import org.matis.bonito.model.Piso;
import org.matis.bonito.validador.LimitadorTextoNumero;

/**
 *
 * @author oscar
 */
public class CrearPiso extends JDialog {

    /**
     * Creates new form RegistrarPiso
     *
     * @param parent
     * @param modal
     */
    public CrearPiso(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargaMisComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        textoPiso = new javax.swing.JTextField();
        cerrar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear Piso");
        setLocationByPlatform(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);

        jLabel1.setText("Piso: ");

        textoPiso.setDocument(new LimitadorTextoNumero(textoPiso, 9));
        textoPiso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textoPisoKeyReleased(evt);
            }
        });

        cerrar.setMnemonic('C');
        cerrar.setText("Cerrar");
        cerrar.setToolTipText("");

        guardar.setMnemonic('A');
        guardar.setText("Aceptar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cerrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(guardar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addComponent(textoPiso, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textoPiso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrar)
                    .addComponent(guardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        setSize(new java.awt.Dimension(318, 180));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cargaMisComponentes() {
        setUndecorated(true);
        guardar.setEnabled(false);
        textoPiso.requestFocus();
        var kb = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        kb.addKeyEventPostProcessor(new KeyEventPostProcessor() {
            @Override
            public boolean postProcessKeyEvent(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE && this != null) {
                    System.out.println("Cerrando dialogo...");
                    dispose();
                }

                return false;
            }
        });
        textoPiso.addActionListener(this::accionTextPiso);
        this.getRootPane().setDefaultButton(guardar);
        guardar.addActionListener(e -> guardandoPiso());
        cerrar.addActionListener(e -> dispose());
    }

    private void accionTextPiso(ActionEvent e) {
        validacionText(e);
    }

    private void validacionText(ActionEvent e) {
        var piso = textoPiso.getText();
        if (piso.isEmpty()) {
            showMessageDialog(this, "El campo piso está vacío", "Monitor", ERROR_MESSAGE);
            getDefaultToolkit().beep();
            textoPiso.requestFocus();
        } else {
            var pisoControl = new PisoController();
            var pisosControl = pisoControl.obtenerPiso(piso);
            if (pisosControl != null) {
                showMessageDialog(this, "Ya existe el registro del piso", "Monitor", ERROR_MESSAGE);
                getDefaultToolkit().beep();
                guardar.setEnabled(false);
                textoPiso.selectAll();
                textoPiso.setSelectionColor(CYAN);
                textoPiso.requestFocus();
            } else {
                switch (piso.length()) {
                    case 1 -> {
                        showMessageDialog(this, "El nombre del piso debe de contener más caracteres", "Monitor", ERROR_MESSAGE);
                        guardar.setEnabled(false);
                        getDefaultToolkit().beep();
                        textoPiso.selectAll();
                        textoPiso.setSelectionColor(CYAN);
                        textoPiso.requestFocus();
                    }
                    default -> {
                        guardar.setEnabled(true);
                        ((JComponent) e.getSource()).transferFocus();
                    }
                }
            }
        }
    }

    private void textoPisoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoPisoKeyReleased
        // TODO add your handling code here:
        var textPiso = textoPiso.getText();
        if (textPiso.isEmpty()) {
            textoPiso.requestFocus();
            getDefaultToolkit().beep();
        } else {
            var pisoController = new PisoController();
            var pisoInegrado = pisoController.obtenerPisoActivo(textPiso);
            if (pisoInegrado != null) {
                showMessageDialog(this, "Piso ya registrado...", "Monitor", ERROR_MESSAGE);
                textoPiso.requestFocus();
                textoPiso.selectAll();
                textoPiso.setSelectionColor(CYAN);
                getDefaultToolkit().beep();
                guardar.setEnabled(false);
                out.println(pisoInegrado);
                var ca = pisoInegrado.getCodigo_piso();
                out.println(ca);
            } else {
                //showMessageDialog(this, sedeid, "Monitor", INFORMATION_MESSAGE);
                out.println("Sin registro");
            }
        }
    }//GEN-LAST:event_textoPisoKeyReleased

    private void guardandoPiso() {

        var textPiso = textoPiso.getText();
        if (textPiso.isEmpty()) {
            showMessageDialog(this, "El campo piso está vacío", "Monitor", ERROR_MESSAGE);
            textoPiso.requestFocus();
            getDefaultToolkit().beep();
        } else {
            var pisoControler = new PisoController();
            var elPiso = pisoControler.obtenerPisoActivo(textPiso);
            if (elPiso != null) {
                showMessageDialog(this, "Piso ya registrado...", "Monitor", ERROR_MESSAGE);
                textoPiso.requestFocus();
                textoPiso.selectAll();
                textoPiso.setSelectionColor(CYAN);
                getDefaultToolkit().beep();
                guardar.setEnabled(false);
            } else {
                var namePiso = textoPiso.getText();
                var elultimoFolioPiso = devuelveLastFolio();
                var piso = new Piso(namePiso, elultimoFolioPiso);
                if (pisoControler.crearPiso(piso)) {
                    showMessageDialog(this, "Piso registrado exitosamente", "Monitor", INFORMATION_MESSAGE);
                    textoPiso.requestFocus();
                    textoPiso.setText("");
                    guardar.setEnabled(false);
                } else {
                    showMessageDialog(this, "No se creo la sede.............", "Monitor", ERROR_MESSAGE);
                    textoPiso.requestFocus();
                }
            }
        }
    }

    private String devuelveLastFolio() {
        var pisoControler = new PisoController();
        out.println("Sin registro");
        guardar.setEnabled(true);
        var initFolioPiso = pisoControler.obtenerUltimoPisoRegistro().get().getCodigo_piso().substring(2, 14);
        var aEntero = valueOf(initFolioPiso);
        var incrementoFolio = aEntero + 1;
        var folioToSave = format(miFormatoFolio, incrementoFolio);
        return folioToSave;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cerrar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField textoPiso;
    // End of variables declaration//GEN-END:variables

    private int nuevoNumeroFolio = 1;
    final static String miFormatoFolio = "P-%012d";

}
