/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package org.matis.bonito.formularios;

import org.matis.bonito.controller.PisoController;
import org.matis.bonito.controller.TipoEquipoController;
import org.matis.bonito.model.Piso;
import org.matis.bonito.model.TipoEquipo;

import static java.awt.Color.CYAN;
import static java.awt.Toolkit.getDefaultToolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.*;

import static java.lang.Integer.valueOf;
import static java.lang.String.format;
import static java.lang.System.out;
import static javax.swing.JOptionPane.*;
import org.matis.bonito.validador.LimitadorTextoNumero;

/**
 *
 * @author oscar
 */
public class CreaTipoEquipo extends JDialog {

    /**
     * Creates new form TipoEquipo
     *
     * @param parent
     * @param modal
     */
    public CreaTipoEquipo(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargaMisComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        textTipoEquipo = new javax.swing.JTextField();
        cerrar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar tipo equipo");
        setLocationByPlatform(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);

        jLabel1.setText("Tipo de equipo: ");

        textTipoEquipo.setDocument(new LimitadorTextoNumero(textTipoEquipo, 12));

        cerrar.setMnemonic('C');
        cerrar.setText("Cancelar");
        cerrar.setToolTipText("");

        guardar.setMnemonic('A');
        guardar.setText("Aceptar");
        guardar.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(cerrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(jLabel1)
                            .addGap(2, 2, 2)
                            .addComponent(textTipoEquipo))
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textTipoEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrar)
                    .addComponent(guardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(326, 164));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cargaMisComponentes() {
        textTipoEquipo.requestFocus();
        guardar.setEnabled(false);
        textTipoEquipo.addActionListener(e1 -> validaDatos(e1));
        textTipoEquipo.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {}

            @Override
            public void keyPressed(KeyEvent e) {}

            @Override
            public void keyReleased(KeyEvent e) {
                var tipo = textTipoEquipo.getText();
                if (tipo.isEmpty()) {
                    showMessageDialog(CreaTipoEquipo.this, "El campo tipo de equipo está vacío", "Monitor", ERROR_MESSAGE);
                    getDefaultToolkit().beep();
                    textTipoEquipo.requestFocus();
                } else {
                    var tipoEquipoController = new TipoEquipoController();
                    var tipoEquipoIntegrado = tipoEquipoController.obtenerTipoEquipoActivo(tipo);
                    if (tipoEquipoIntegrado != null) {
                        showMessageDialog(CreaTipoEquipo.this, "Piso ya registrado...", "Monitor", ERROR_MESSAGE);
                        textTipoEquipo.requestFocus();
                        textTipoEquipo.selectAll();
                        textTipoEquipo.setSelectionColor(CYAN);
                        getDefaultToolkit().beep();
                        guardar.setEnabled(false);
                        out.println(tipoEquipoIntegrado);
                        var ca = tipoEquipoIntegrado.getCodigo_tipo();
                        out.println(ca);
                    } else {
                        //showMessageDialog(this, sedeid, "Monitor", INFORMATION_MESSAGE);
                        out.println("Sin registro");
                    }
                }
            }
        });
        guardar.addActionListener(e -> guardandoTipo());
        cerrar.addActionListener(e -> dispose());
        this.getRootPane().setDefaultButton(guardar);
    }

    private void validaDatos(ActionEvent e) {
        var tipo = textTipoEquipo.getText();
        if (tipo.isEmpty()) {
            showMessageDialog(this, "El campo tipo está vacío", "Monitor", ERROR_MESSAGE);
            getDefaultToolkit().beep();
            textTipoEquipo.requestFocus();
        } else {
            var tipoEquipoController = new TipoEquipoController();
            var tipoEquipoControl = tipoEquipoController.obtenerTipoEquipoActivo(tipo);
            if (tipoEquipoControl != null) {
                showMessageDialog(this, "Ya existe el registro del piso", "Monitor", ERROR_MESSAGE);
                getDefaultToolkit().beep();
                guardar.setEnabled(false);
                textTipoEquipo.selectAll();
                textTipoEquipo.setSelectionColor(CYAN);
                textTipoEquipo.requestFocus();
            } else {
                switch (tipo.length()) {
                    case 1 -> {
                        showMessageDialog(this, "El tipo de equipo debe de contener más caracteres", "Monitor", ERROR_MESSAGE);
                        guardar.setEnabled(false);
                        getDefaultToolkit().beep();
                        textTipoEquipo.selectAll();
                        textTipoEquipo.setSelectionColor(CYAN);
                        textTipoEquipo.requestFocus();
                    }
                    default -> {
                        guardar.setEnabled(true);
                        ((JComponent) e.getSource()).transferFocus();
                    }
                }
            }
        }
    }

    private void guardandoTipo() {
        var tipoEquipoTexto = textTipoEquipo.getText();
        if (tipoEquipoTexto.isEmpty()) {
            showMessageDialog(this, "El campo piso está vacío", "Monitor", ERROR_MESSAGE);
            textTipoEquipo.requestFocus();
            getDefaultToolkit().beep();
        } else {
            var tipoEquipoController = new TipoEquipoController();
            var tipoEquipo = tipoEquipoController.obtenerTipoEquipoActivo(tipoEquipoTexto);
            if (tipoEquipo != null) {
                showMessageDialog(this, "Tipo equipo ya registrado...", "Monitor", ERROR_MESSAGE);
                textTipoEquipo.requestFocus();
                textTipoEquipo.selectAll();
                textTipoEquipo.setSelectionColor(CYAN);
                getDefaultToolkit().beep();
                guardar.setEnabled(false);
            } else {
                var nameEquipo = textTipoEquipo.getText();
                var elultimoFolioPiso = devuelveLastFolio();
                var tipoequipo = new TipoEquipo(nameEquipo, elultimoFolioPiso);
                if (tipoEquipoController.crearTipoEquipo(tipoequipo)) {
                    showMessageDialog(this, "Equipo registrado exitosamente", "Monitor", INFORMATION_MESSAGE);
                    textTipoEquipo.requestFocus();
                    textTipoEquipo.setText("");
                    guardar.setEnabled(false);
                } else {
                    showMessageDialog(this, "No se logro crear el tipo de equipo.............", "Monitor", ERROR_MESSAGE);
                    textTipoEquipo.requestFocus();
                }
            }
        }
    }

    private String devuelveLastFolio() {
        var tipoEquipoController = new TipoEquipoController();
        out.println("Sin registro");
        guardar.setEnabled(true);
        var initFolioPiso = tipoEquipoController.obtenerUltimoTipoEquipoRegistro().get().getCodigo_tipo().substring(2, 14);
        var aEntero = valueOf(initFolioPiso);
        var incrementoFolio = aEntero + 1;
        var folioToSave = format(miFormatoFolio, incrementoFolio);
        return folioToSave;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cerrar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField textTipoEquipo;
    // End of variables declaration//GEN-END:variables
    private int nuevoNumeroFolio = 1;
    final static String miFormatoFolio = "E-%012d";
}
